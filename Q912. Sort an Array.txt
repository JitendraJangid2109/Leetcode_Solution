Q912. Sort an Array
https://leetcode.com/problems/sort-an-array/description/
Solution:
class Solution {
    public int[] sortArray(int[] nums) {
       // PriorityQueue<Integer> pq = new PriorityQueue();

        int n = nums.length;
        // for(int i=0;i<n;i++){
        //     pq.add(nums[i]);
        // }

        // int[] ans = new int[n];

        // for(int i=0;i<n;i++){
        //     ans[i] = pq.poll();
        // }
        
        mergeSort(nums,0,n-1);
        return nums;
    }

    public void mergeSort(int[] nums,int l ,int r){
        if(l<r){
            int m = l + (r-l)/2;
            mergeSort(nums,l,m);
            mergeSort(nums,m+1,r);
            merge(nums,l,m,r);
        }

     
    }
    public void merge(int[] nums,int l,int m ,int r){
         int n1 = m - l +1;
         int n2 = r - m;
         int[] left = new int[n1];
         int[] right = new int[n2];

         for(int i=0;i<n1;i++){
             left[i] = nums[l+i];
         }

         for(int j=0;j<n2;j++){
             right[j] = nums[m + 1+j];
         }

         int i=0 , j=0, k = l;
         while(i<n1 || j < n2){
             if(j == n2 || i < n1 && left[i] < right[j]){
                 nums[k++] = left[i++];
             }
             else {
                 nums[k++] = right[j++];
             }
         }

     }
}