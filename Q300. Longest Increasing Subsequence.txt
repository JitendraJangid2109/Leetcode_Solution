Q300. Longest Increasing Subsequence
https://leetcode.com/problems/longest-increasing-subsequence/description/
Solution:
class Solution {
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        if(n==0 || nums == null) return 0;
        int[] dp = new int[n];

        Arrays.fill(dp,1);
        for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[i] > nums[j]){
                    dp[i] = Math.max(dp[i],dp[j]+1);
                }
            }
        }

        int maxiLength = 0;
        for(int i=0;i<dp.length;i++){
            maxiLength = Math.max(dp[i],maxiLength);
        }

        return maxiLength;
    }
}