Q451. Sort Characters By Frequency
https://leetcode.com/problems/sort-characters-by-frequency/description/
Solution:
class Solution {
    public String frequencySort(String s) {
        Map<Character,Integer> mp = new HashMap();
        StringBuilder sb = new StringBuilder();

        for(int i=0;i<s.length();i++){
            char ch = s.charAt(i);
            mp.put(ch,mp.getOrDefault(ch,0)+1);
        }      

        PriorityQueue<Pair> pq = new PriorityQueue<>((a,b) -> a.freq==b.freq ? a.ch -b.ch : b.freq-a.freq);

        for(Character i : mp.keySet()) {
            pq.add(new Pair(i , mp.get(i)));
        }

        while(!pq.isEmpty()){
            char ch = pq.peek().ch;
            int freq = pq.peek().freq;
            pq.poll();
             
              while(freq != 0){
                  sb.append(ch);
                  freq--;
              }
        }

        return sb.toString();
    }

    class Pair{
        char ch;
        int freq;
        public Pair(char ch , int freq){
            this.ch = ch;
            this.freq = freq;
        }
    }
}