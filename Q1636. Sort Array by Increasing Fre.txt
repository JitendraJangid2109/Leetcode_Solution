Q1636. Sort Array by Increasing Frequency
https://leetcode.com/problems/sort-array-by-increasing-frequency/description/
Solution:
class Solution {
    public int[] frequencySort(int[] nums) {
        int n = nums.length;
        Map<Integer,Integer> mp = new HashMap<>();
        int[] ans = new int[n];
       
        for(int i=0;i<n;i++){
            mp.put(nums[i] , mp.getOrDefault(nums[i],0)+1);
        }
         
        List<Integer> ls = new ArrayList<>();
        // we are not adding the duplicates here
        for(Map.Entry<Integer,Integer> num : mp.entrySet()){
            ls.add(num.getKey());
        }
        
        Collections.sort(ls, (a,b) -> { return mp.get(a)==mp.get(b) ? b-a : mp.get(a)-mp.get(b);
        });

        int i=0;
        for(int num : ls){
           for(int j=0;j<mp.get(num);j++){
             ans[i++] = num;
           }
        }
        return ans;
    }
}