Q130. Surrounded Regions
https://leetcode.com/problems/surrounded-regions/description/
Solution:
class Solution {
    public void solve(char[][] board) {
        int n = board.length;
        int m = board[0].length;
        if(n==0) return;
        if(n==1 && m==1) return;

        // for the first col and last col
        // make 'O' to '*'
        for(int i=0;i<n;i++){
            if(board[i][0]=='O'){
                helper(board,i,0);
            }
            if(board[i][m-1]=='O'){
                helper(board,i,m-1);
            }
        }

     // for the first and last row 
     // make 'O' to '*'
        for(int j=0;j<m;j++){
            if(board[0][j]=='O'){
                helper(board,0,j);
            }
            if(board[n-1][j]=='O'){
                helper(board,n-1,j);
            }
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]=='O'){
                    board[i][j]='X';
                }
                else if(board[i][j]=='*'){
                    board[i][j] = 'O';
                }
            }
        }
    }

    public void helper(char[][] board,int i,int j){
        if(i < 0 || i > board.length-1 || j < 0 || j > board[0].length-1) return;

        if(board[i][j] == 'O'){
            board[i][j] = '*';
        }

        if(i > 1 && board[i-1][j]=='O') helper(board , i-1 ,j);
        if(i < board.length-2 && board[i+1][j]=='O') helper(board , i+1 ,j);
        if(j > 1 && board[i][j-1]=='O') helper(board , i , j-1);
        if(j < board[0].length-2 && board[i][j+1]=='O') helper(board , i ,j+1);
    }
}